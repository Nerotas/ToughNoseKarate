module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: './tsconfig.json',
    tsconfigRootDir: __dirname,
    ecmaVersion: 2018,
    sourceType: 'module',
    allowDefaultProject: true,
  },
  plugins: [
    'prettier',
    'nestjs',
    '@typescript-eslint',
    'sort-destructure-keys',
  ],
  extends: [
    'eslint:recommended',
    'plugin:nestjs/recommended',
    '@typescript-eslint/eslint-recommended',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.cjs', '__tests/**', 'node_modules', 'dist'],
  rules: {
    // Standard JavaScript style rules
    'brace-style': ['warn', '1tbs', { allowSingleLine: true }],
    'comma-style': ['warn', 'last'],
    'dot-location': ['warn', 'property'],
    'key-spacing': ['warn', { beforeColon: false, afterColon: true }],
    'keyword-spacing': 'warn',
    'object-curly-spacing': ['warn', 'always'],
    'space-before-blocks': 'warn',
    'space-before-function-paren': ['warn', 'always'],
    'space-infix-ops': 'warn',
    'spaced-comment': ['warn', 'always'],

    // NestJS specific rules
    'nestjs/use-dependency-injection': 'warn',
    'nestjs/parse-int-pipe': 'warn',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/comma-dangle': 'off',
    '@typescript-eslint/comma-spacing': 'warn',
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-implied-eval': 'off',
    '@typescript-eslint/no-inferrable-types': 'off',
    '@typescript-eslint/no-non-null-assertion': 'off',
    '@typescript-eslint/no-shadow': 'off',
    '@typescript-eslint/no-unused-expressions': 'off',
    '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/semi': 'warn',
    '@typescript-eslint/require-await': 'off',
    '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/ban-ts-comment': 'warn',
    '@typescript-eslint/unbound-method': 'off',
    '@typescript-eslint/restrict-template-expressions': 'warn',
    '@typescript-eslint/no-floating-promises': 'warn',
    '@typescript-eslint/no-require-imports': 'warn',
    'arrow-body-style': 'warn',
    'prefer-const': 'warn',
    'no-async-promise-executor': 'off',
    'no-console': 'off',
    'no-debugger': 'warn',
    'no-empty-pattern': 'off',
    'no-param-reassign': 'off',
    'no-plusplus': 'off',
    'no-prototype-builtins': 'off',
    'no-return-assign': 'off',
    'no-undef': 'off',
    'no-unneeded-ternary': 'warn',
    'no-unused-vars': 'off',
    'no-use-before-define': 'off',
    'no-var': 'error',
    eqeqeq: 'warn',
    'prettier/prettier': ['error', { endOfLine: 'auto' }],
    'sort-imports': [
      'off',
      {
        ignoreDeclarationSort: true,
        ignoreCase: true,
      },
    ],
    // Override TypeScript strict rules (must be at the end)
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/no-unsafe-return': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-unsafe-argument': 'off',
  },
  overrides: [
    {
      files: ['src/decorators/**/*.ts', 'src/guards/**/*.ts', '**/*.spec.ts'],
      rules: {
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-call': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
      },
    },
  ],
  settings: {
    'import/resolver': {
      typescript: {
        alwaysTryTypes: true,
        project: './tsconfig.json',
      },
    },
  },
};
